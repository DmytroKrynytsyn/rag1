---
- name: Docker for all
  hosts: all
  become: yes

  tasks:
    - name: Initial update yum cache
      yum:
        update_cache: yes

    - name: Add initial dependencies
      yum:
        name: 
          - awscli
          - tree
        state: present
    
    - name: Install Docker
      yum:
        name: docker
        state: present

    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

---
- name: Configure Vector DB EC2 instance to sync directories with S3 on startup and shutdown
  hosts: vector_db
  become: yes
  vars:
    s3_bucket_name: "dkedu"
    s3_folder_name: "rag1"
    local_db_files_location: "/volumes/milvus"
    milvus_script_location: "/usr/local/bin"
    milvus_script_url: "https://raw.githubusercontent.com/milvus-io/milvus/master/scripts/standalone_embed.sh"
  
  tasks:

    - name: Ensure the local directory exists
      file:
        path: "{{ local_db_files_location }}"
        state: directory
        mode: '0777'

    - name: Download standalone_embed.sh milvus script
      get_url:
        url: "{{ milvus_script_url }}"
        dest: "{{ milvus_script_location }}/standalone_embed.sh"
        mode: '0755'

    - name: Create the vector-db-start systemd service file from template
      template:
        src: vector-db-start.service.j2
        dest: /etc/systemd/system/vector-db-start.service
        mode: '0644'

    - name: Create the vector-db-stop systemd service file from template
      template:
        src: vector-db-stop.service.j2
        dest: /etc/systemd/system/vector-db-stop.service
        mode: '0644'
      
    - name: Reload systemd to pick up the new services
      command: systemctl daemon-reload
      become: yes

    - name: Enable the vector-db-start service
      systemd:
        name: vector-db-start.service
        enabled: yes
        state: started

    - name: Enable the vector-db-stop service
      systemd:
        name: vector-db-stop.service
        enabled: yes
        state: started

- name: Configure RAG backend service
  hosts: rag_backend
  become: yes

  tasks:

   - name: Pull Docker image
      community.docker.docker_image:
        name: dkrinitsyn/rag1backend
        tag: latest
        source: pull

    - name: Run Docker container
      community.docker.docker_container:
        name: rag1backend_container
        image: dkrinitsyn/rag1backend:latest
        state: started
        ports:
          - "8000:80"
        environment:
          VECTOR_DN_DNS_NAME: "{{ hostvars['vector_db']['ansible_host'] }}"
