---
- name: Configure Vector DB EC2 instance to sync directories with S3 on startup and shutdown
  hosts: vector_db
  become: yes
  vars:
    s3_bucket_name: "dkedu"
    s3_folder_name: "rag1"  # Prefix in the S3 bucket where the files are located
    local_db_files_location: "/volumes/milvus"
    milvus_script_location: "/usr/local/bin"
    milvus_script_url: "https://raw.githubusercontent.com/milvus-io/milvus/master/scripts/standalone_embed.sh"
  
  tasks:

    - name: Ensure the local directory exists
      file:
        path: "{{ local_db_files_location }}"
        state: directory
        mode: '0777'

    - name: Initial update apt cache
      apt:
        update_cache: yes

    - name: Add initial dependencies
      apt:
        name: 
          - awscli
          - ca-certificates
          - curl
          - tree
        state: present
    
    - name: Create directory for apt keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker's official GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository to Apt sources
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update apt cache after adding Docker repository
      apt:
        update_cache: yes

    - name: Install Docker components
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Download standalone_embed.sh milvus script
      get_url:
        url: "{{ milvus_script_url }}"
        dest: "{{ milvus_script_location }}/standalone_embed.sh"
        mode: '0755'

    - name: Create the download-on-startup systemd service file from template
      template:
        src: download-on-startup.service.j2
        dest: /etc/systemd/system/download-on-startup.service
        mode: '0644'

    - name: Create the upload-on-shutdown systemd service file from template
      template:
        src: upload-on-shutdown.service.j2
        dest: /etc/systemd/system/upload-on-shutdown.service
        mode: '0644'
      
    - name: Reload systemd to pick up the new services
      command: systemctl daemon-reload

    - name: Enable the download-on-startup service
      systemd:
        name: download-on-startup.service
        enabled: yes
        state: started

    - name: Enable the upload-on-shutdown service
      systemd:
        name: upload-on-shutdown.service
        enabled: yes
        state: started

- name: Configure RAG host
  hosts: rag_service
  become: yes
  vars:
    s3_bucket_name: "dkedu"
    
  tasks:
    - name: Ensure software-properties-common is installed
      apt:
        name: software-properties-common
        state: present

    - name: Add deadsnakes PPA
      apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present

    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Install Python 3.12
      apt:
        name:
          - python3.12
          - python3.12-venv
          - python3.12-dev
        state: present